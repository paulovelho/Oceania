<?php

## FILE GENERATED BY MAGRATHEA.
## SHOULD NOT BE CHANGED MANUALLY

class TaskBase extends MagratheaModel implements iMagratheaModel {

	public $id, $project_id, $parent_task_id, $work_id, $title, $text, $cost, $status_id, $user_id, $creator_id;
	public $created_at, $updated_at;
	public $dbPk;
	protected $autoload = null;

	public function __construct(  $id=0  ){ 
		$this->MagratheaStart();
		if( !empty($id) ){
			$pk = $this->dbPk;
			$this->$pk = $id;
			$this->GetById($id);
		}
	}
	public function MagratheaStart(){
		$this->dbTable = "tasks";
		$this->dbPk = "id";
		$this->dbValues["id"] = "int";
		$this->dbValues["project_id"] = "int";
		$this->dbValues["parent_task_id"] = "int";
		$this->dbValues["work_id"] = "int";
		$this->dbValues["title"] = "string";
		$this->dbValues["text"] = "text";
		$this->dbValues["cost"] = "float";
		$this->dbValues["status_id"] = "int";
		$this->dbValues["user_id"] = "int";
		$this->dbValues["creator_id"] = "int";

		$this->relations["properties"]["Projects"] = null;
		$this->relations["methods"]["Projects"] = "GetProjects";
		$this->relations["lazyload"]["Projects"] = "false";
		$this->relations["properties"]["Work"] = null;
		$this->relations["methods"]["Work"] = "GetWork";
		$this->relations["lazyload"]["Work"] = "false";
		$this->relations["properties"]["ParentTasks"] = null;
		$this->relations["methods"]["ParentTasks"] = "GetParentTasks";
		$this->relations["lazyload"]["ParentTasks"] = "false";
		$this->relations["properties"]["Tasks"] = null;
		$this->relations["methods"]["Tasks"] = "GetTasks";
		$this->relations["lazyload"]["Tasks"] = "true";
		$this->relations["properties"]["User"] = null;
		$this->relations["methods"]["User"] = "GetUser";
		$this->relations["lazyload"]["User"] = "false";
		$this->relations["properties"]["Creator"] = null;
		$this->relations["methods"]["Creator"] = "GetCreator";
		$this->relations["lazyload"]["Creator"] = "false";
		$this->relations["properties"]["StatusChanges"] = null;
		$this->relations["methods"]["StatusChanges"] = "GetStatusChanges";
		$this->relations["lazyload"]["StatusChanges"] = "true";
		$this->relations["properties"]["Status"] = null;
		$this->relations["methods"]["Status"] = "GetStatus";
		$this->relations["lazyload"]["Status"] = "false";

		$this->dbAlias["created_at"] =  "datetime";
		$this->dbAlias["updated_at"] =  "datetime";
	}

	// >>> relations:
	public function GetProjects(){
		if($this->relations["properties"]["Projects"] != null) return $this->relations["properties"]["Projects"];
		$this->relations["properties"]["Projects"] = new Project($this->project_id);
		return $this->relations["properties"]["Projects"];
	}
	public function SetProjects($projects){
		$this->relations["properties"]["Projects"] = $projects;
		$this->project_id = $projects->GetID();
		return $this;
	}
	public function GetWork(){
		if($this->relations["properties"]["Work"] != null) return $this->relations["properties"]["Work"];
		$this->relations["properties"]["Work"] = new Work($this->work_id);
		return $this->relations["properties"]["Work"];
	}
	public function SetWork($work){
		$this->relations["properties"]["Work"] = $work;
		$this->work_id = $work->GetID();
		return $this;
	}
	public function GetParentTasks(){
		if($this->relations["properties"]["ParentTasks"] != null) return $this->relations["properties"]["ParentTasks"];
		$this->relations["properties"]["ParentTasks"] = new Task($this->parent_task_id);
		return $this->relations["properties"]["ParentTasks"];
	}
	public function SetParentTasks($parenttasks){
		$this->relations["properties"]["ParentTasks"] = $parenttasks;
		$this->parent_task_id = $parenttasks->GetID();
		return $this;
	}
	public function GetTasks(){
		if($this->relations["properties"]["Tasks"] != null) return $this->relations["properties"]["Tasks"];
		$pk = $this->dbPk;
		$this->relations["properties"]["Tasks"] = TaskControlBase::GetWhere(array("parent_task_id" => $this->$pk));
		return $this->relations["properties"]["Tasks"];
	}
	public function GetUser(){
		if($this->relations["properties"]["User"] != null) return $this->relations["properties"]["User"];
		$this->relations["properties"]["User"] = new User($this->user_id);
		return $this->relations["properties"]["User"];
	}
	public function SetUser($user){
		$this->relations["properties"]["User"] = $user;
		$this->user_id = $user->GetID();
		return $this;
	}
	public function GetCreator(){
		if($this->relations["properties"]["Creator"] != null) return $this->relations["properties"]["Creator"];
		$this->relations["properties"]["Creator"] = new User($this->creator_id);
		return $this->relations["properties"]["Creator"];
	}
	public function SetCreator($creator){
		$this->relations["properties"]["Creator"] = $creator;
		$this->creator_id = $creator->GetID();
		return $this;
	}
	public function GetStatusChanges(){
		if($this->relations["properties"]["StatusChanges"] != null) return $this->relations["properties"]["StatusChanges"];
		$pk = $this->dbPk;
		$this->relations["properties"]["StatusChanges"] = StatusChangeControlBase::GetWhere(array("task_id" => $this->$pk));
		return $this->relations["properties"]["StatusChanges"];
	}
	public function GetStatus(){
		if($this->relations["properties"]["Status"] != null) return $this->relations["properties"]["Status"];
		$this->relations["properties"]["Status"] = new Status($this->status_id);
		return $this->relations["properties"]["Status"];
	}
	public function SetStatus($status){
		$this->relations["properties"]["Status"] = $status;
		$this->status_id = $status->GetID();
		return $this;
	}

}

class TaskControlBase extends MagratheaModelControl {
	protected static $modelName = "Task";
	protected static $dbTable = "tasks";
}
?>